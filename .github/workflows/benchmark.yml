name: Performance Benchmarks

on:
  workflow_dispatch:
    inputs:
      iterations:
        description: 'Number of benchmark iterations'
        required: false
        default: '5'
      concurrency:
        description: 'Concurrency level'
        required: false
        default: '10'
      techniques:
        description: 'Specific techniques to benchmark (comma-separated, leave empty for all)'
        required: false
        default: ''
      image:
        description: 'Docker image to use for benchmarks'
        required: false
        default: 'api-performance:latest'

jobs:
  benchmark:
    name: Run Performance Benchmarks
    runs-on: ubuntu-latest
    services:
      api:
        image: api-performance:latest
        ports:
          - 8000:8000
        env:
          POSTGRES_HOST: postgres
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: api_performance
          REDIS_HOST: redis
          REDIS_PORT: 6379
        options: >-
          --health-cmd "curl -f http://localhost:8000/ || exit 1"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 3
      
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: api_performance
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:6
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Pull Docker image if needed
        run: |
          if [[ "${{ github.event.inputs.image }}" != "api-performance:latest" ]]; then
            docker pull ${{ github.event.inputs.image }}
            docker tag ${{ github.event.inputs.image }} api-performance:latest
          fi
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r benchmarks/requirements.txt
          pip install matplotlib pandas seaborn
      
      - name: Initialize database
        run: |
          PGPASSWORD=postgres psql -h localhost -U postgres -d api_performance -f databases/postgres/init.sql
      
      - name: Run benchmarks
        run: |
          TECHNIQUES="${{ github.event.inputs.techniques }}"
          ITERATIONS="${{ github.event.inputs.iterations || '5' }}"
          CONCURRENCY="${{ github.event.inputs.concurrency || '10' }}"
          
          if [ -z "$TECHNIQUES" ]; then
            python benchmarks/run_all.py --iterations $ITERATIONS --concurrency $CONCURRENCY
          else
            IFS=',' read -ra TECHNIQUE_ARRAY <<< "$TECHNIQUES"
            for TECHNIQUE in "${TECHNIQUE_ARRAY[@]}"; do
              python benchmarks/run.py --technique $TECHNIQUE --iterations $ITERATIONS --concurrency $CONCURRENCY
            done
          fi
      
      - name: Generate visualization report
        run: |
          python benchmarks/visualize_results.py --output benchmark_report.html
      
      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: |
            reports/
            benchmark_report.html